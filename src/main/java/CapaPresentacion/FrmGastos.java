package CapaPresentacion;
import CapaEntidad.Gastos;
import CapaNegocio.GastosBL;
import java.math.BigDecimal;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author e-p-l
 */
public class FrmGastos extends javax.swing.JFrame {

GastosBL oGastoBL = new GastosBL();
void listar(){
        DefaultTableModel mtabla = new DefaultTableModel();
        String [] titulos = {
            "IdGasto",
            "IdProveedor",
            "FechaGasto",
            "TipoDocumento",
            "NumeroDocumento",
            "Concepto",
            "Moneda",
            "Importe",
        };
        mtabla.setColumnIdentifiers(titulos);
        List<Gastos> lista=oGastoBL.listar();
        for(Gastos empresa:lista){
            Object data [] ={empresa.getIdgasto(),
                empresa.getIdProveedor(),
                empresa.getFechaGasto(),
                empresa.getTipoDocumento(),
                empresa.getNumeroDocumento(),
                empresa.getConcepto(),
                empresa.getMoneda(),
                empresa.getImporte(),
                empresa.getIdProveedor(),
                };
            mtabla.addRow(data);
        }
        lbListar.setModel(mtabla);
        
    }
private void deshabilitarCampos() {
    txtId.setEnabled(false);
    txtIdProveedor.setEnabled(false);
    txtNumDoc.setEnabled(false);
    txtaConcepto.setEnabled(false);
    txtImporte.setEnabled(false);
    cboTipoDoc.setEnabled(false);
    cboMoneda.setEnabled(false);
    txtFechaGasto.setEnabled(false);
}

private void habilitarCampos() {
    txtId.setEnabled(true);
    txtIdProveedor.setEnabled(true);
    txtNumDoc.setEnabled(true);
    txtaConcepto.setEnabled(true);
    txtImporte.setEnabled(true);
    cboTipoDoc.setEnabled(true);
    cboMoneda.setEnabled(true);
    txtFechaGasto.setEnabled(true);
}
    
    void activarbotones(boolean botonGuardar,boolean botonBuscar, boolean botonEliminar){
        
        btnGuardar.setEnabled(botonGuardar);
        btnActualizar.setEnabled(botonGuardar);
        btnBuscar.setEnabled(botonGuardar);
        btnEliminar.setEnabled(botonEliminar);
    }
    private boolean validarCampos() {
        if (txtFechaGasto.getDate() == null ||
            cboTipoDoc.getSelectedItem() == null ||
            txtNumDoc.getText().trim().isEmpty() ||
            txtaConcepto.getText().trim().isEmpty() ||
            cboMoneda.getSelectedItem() == null ||
            txtImporte.getText().trim().isEmpty() ||
            txtIdProveedor.getText().trim().isEmpty()) {
            
            JOptionPane.showMessageDialog(this, 
                "Todos los campos deben estar llenos", 
                "Validación", JOptionPane.WARNING_MESSAGE);
            return false;
        }
        
        try {
            new BigDecimal(txtImporte.getText());
            Integer.parseInt(txtIdProveedor.getText());
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, 
                "Importe e ID Proveedor deben ser números válidos", 
                "Validación", JOptionPane.WARNING_MESSAGE);
            return false;
        }
        
        return true;
    }
    void llenarTabla(List<Gastos> lista) {
    DefaultTableModel mtabla = new DefaultTableModel();
    String [] titulos = {
        "IdGasto",
        "FechaGasto",
        "TipoDocumento",
        "NumeroDocumento",
        "Concepto",
        "Moneda",
        "Importe",
        "IdProveedor"
    };
    mtabla.setColumnIdentifiers(titulos);
    for (Gastos g : lista) {
        Object data [] = {
            g.getIdgasto(),
            g.getFechaGasto(),
            g.getTipoDocumento(),
            g.getNumeroDocumento(),
            g.getConcepto(),
            g.getMoneda(),
            g.getImporte(),
            g.getIdProveedor()
        };
        mtabla.addRow(data);
    }
    lbListar.setModel(mtabla);
}
   void limpiar(){
    txtId.setText("");  
    txtFechaGasto.setDate(null); // Suponiendo que es un JDateChooser
    cboTipoDoc.setSelectedIndex(0); // Selecciona el primer item
    txtNumDoc.setText("");
    txtaConcepto.setText("");    
    cboMoneda.setSelectedIndex(0);
    txtImporte.setText("");
    txtIdProveedor.setText("");
}
    /**
     * Creates new form FrmGastos
     */
    public FrmGastos() {
        initComponents();
        setLocationRelativeTo(null);
        setResizable(false);
       deshabilitarCampos(); // Al iniciar, todo deshabilitado
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txtId = new javax.swing.JTextField();
        cboTipoDoc = new javax.swing.JComboBox<>();
        txtNumDoc = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtaConcepto = new javax.swing.JTextArea();
        txtImporte = new javax.swing.JTextField();
        txtIdProveedor = new javax.swing.JTextField();
        btnActualizar = new javax.swing.JButton();
        btnBuscar = new javax.swing.JButton();
        btnNuevo = new javax.swing.JButton();
        btnGuardar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        lbListar = new javax.swing.JTable();
        cboMoneda = new javax.swing.JComboBox<>();
        txtFechaGasto = new com.toedter.calendar.JDateChooser();
        btnListar = new javax.swing.JButton();
        btnEditar = new javax.swing.JButton();
        btnSalir = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("GASTOS");
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(0, 0, 51));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("LISTA DE GASTOS ");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(247, 14, 206, -1));

        jLabel2.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Id Gasto");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 70, -1, -1));

        jLabel3.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Fecha Gasto");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 140, -1, -1));

        jLabel4.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Tipo Documento");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 170, -1, -1));

        jLabel5.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Numero Documento");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 210, -1, -1));

        jLabel6.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Concepto");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 270, -1, -1));

        jLabel7.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Moneda");
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 350, -1, 20));

        jLabel8.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Importe");
        jPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 380, -1, 20));

        jLabel9.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("IdProveedor");
        jPanel1.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 100, -1, 20));

        txtId.setBackground(new java.awt.Color(0, 0, 51));
        txtId.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        txtId.setForeground(new java.awt.Color(255, 255, 255));
        txtId.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        jPanel1.add(txtId, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 70, 110, -1));

        cboTipoDoc.setBackground(new java.awt.Color(255, 255, 255));
        cboTipoDoc.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        cboTipoDoc.setForeground(new java.awt.Color(0, 0, 0));
        cboTipoDoc.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Factura", "Recibo", "Otro" }));
        jPanel1.add(cboTipoDoc, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 170, 150, 30));

        txtNumDoc.setBackground(new java.awt.Color(255, 255, 255));
        txtNumDoc.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        txtNumDoc.setForeground(new java.awt.Color(0, 0, 0));
        txtNumDoc.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        jPanel1.add(txtNumDoc, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 210, 130, 30));

        txtaConcepto.setBackground(new java.awt.Color(255, 255, 255));
        txtaConcepto.setColumns(20);
        txtaConcepto.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        txtaConcepto.setForeground(new java.awt.Color(0, 0, 0));
        txtaConcepto.setRows(5);
        jScrollPane1.setViewportView(txtaConcepto);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 250, 260, 80));

        txtImporte.setBackground(new java.awt.Color(255, 255, 255));
        txtImporte.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        txtImporte.setForeground(new java.awt.Color(0, 0, 0));
        txtImporte.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        jPanel1.add(txtImporte, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 380, 130, 30));

        txtIdProveedor.setBackground(new java.awt.Color(255, 255, 255));
        txtIdProveedor.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        txtIdProveedor.setForeground(new java.awt.Color(0, 0, 0));
        txtIdProveedor.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        jPanel1.add(txtIdProveedor, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 100, 130, 30));

        btnActualizar.setBackground(new java.awt.Color(0, 102, 153));
        btnActualizar.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        btnActualizar.setForeground(new java.awt.Color(255, 255, 255));
        btnActualizar.setText("ACTUALIZAR");
        btnActualizar.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(204, 0, 0)));
        btnActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarActionPerformed(evt);
            }
        });
        jPanel1.add(btnActualizar, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 110, 120, 30));

        btnBuscar.setBackground(new java.awt.Color(0, 102, 153));
        btnBuscar.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        btnBuscar.setForeground(new java.awt.Color(255, 255, 255));
        btnBuscar.setText("BUSCAR");
        btnBuscar.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(204, 0, 0)));
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });
        jPanel1.add(btnBuscar, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 70, 120, 30));

        btnNuevo.setBackground(new java.awt.Color(0, 102, 153));
        btnNuevo.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        btnNuevo.setForeground(new java.awt.Color(255, 255, 255));
        btnNuevo.setText("NUEVO");
        btnNuevo.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(204, 0, 0)));
        btnNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoActionPerformed(evt);
            }
        });
        jPanel1.add(btnNuevo, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 110, 100, 30));

        btnGuardar.setBackground(new java.awt.Color(0, 102, 153));
        btnGuardar.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        btnGuardar.setForeground(new java.awt.Color(255, 255, 255));
        btnGuardar.setText("AGREGAR");
        btnGuardar.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(204, 0, 0)));
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });
        jPanel1.add(btnGuardar, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 110, 90, 30));

        btnEliminar.setBackground(new java.awt.Color(0, 102, 153));
        btnEliminar.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        btnEliminar.setForeground(new java.awt.Color(255, 255, 255));
        btnEliminar.setText("ELIMINAR");
        btnEliminar.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(204, 0, 0)));
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });
        jPanel1.add(btnEliminar, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 110, 100, 30));

        lbListar.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane2.setViewportView(lbListar);

        jPanel1.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 160, 460, 260));

        cboMoneda.setBackground(new java.awt.Color(255, 255, 255));
        cboMoneda.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        cboMoneda.setForeground(new java.awt.Color(0, 0, 0));
        cboMoneda.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Soles", "Dolares" }));
        jPanel1.add(cboMoneda, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 340, 130, 30));
        jPanel1.add(txtFechaGasto, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 134, 190, 30));

        btnListar.setBackground(new java.awt.Color(0, 102, 153));
        btnListar.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        btnListar.setForeground(new java.awt.Color(255, 255, 255));
        btnListar.setText("LISTAR TODO");
        btnListar.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(204, 0, 0)));
        btnListar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnListarActionPerformed(evt);
            }
        });
        jPanel1.add(btnListar, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 70, 100, 30));

        btnEditar.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        btnEditar.setForeground(new java.awt.Color(255, 255, 255));
        btnEditar.setText("EDITAR");
        btnEditar.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(204, 0, 0)));
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });
        jPanel1.add(btnEditar, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 70, 90, 30));

        btnSalir.setBackground(new java.awt.Color(0, 102, 153));
        btnSalir.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        btnSalir.setForeground(new java.awt.Color(255, 255, 255));
        btnSalir.setText("SALIR");
        btnSalir.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(204, 0, 0)));
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });
        jPanel1.add(btnSalir, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 70, 90, 30));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 840, 440));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
       String concepto = txtaConcepto.getText().trim();
    String idProveedorStr = txtIdProveedor.getText().trim();
    
    if (!concepto.isEmpty()) {
        // Buscar por concepto
        List<Gastos> lista = oGastoBL.buscarPorConcepto(concepto);
        if (lista.isEmpty()) {
            JOptionPane.showMessageDialog(this, 
                "No se encontraron gastos con el concepto: " + concepto,
                "Búsqueda", JOptionPane.INFORMATION_MESSAGE);
        } else {
            llenarTabla(lista);
            JOptionPane.showMessageDialog(this, 
                "Se encontraron " + lista.size() + " gastos",
                "Búsqueda", JOptionPane.INFORMATION_MESSAGE);
        }
    } else if (!idProveedorStr.isEmpty()) {
        try {
            int idProveedor = Integer.parseInt(idProveedorStr);
            // Buscar por proveedor
            List<Gastos> lista = oGastoBL.buscarPorProveedor(idProveedor);
            if (lista.isEmpty()) {
                JOptionPane.showMessageDialog(this, 
                    "No se encontraron gastos para el proveedor ID: " + idProveedor,
                    "Búsqueda", JOptionPane.INFORMATION_MESSAGE);
            } else {
                llenarTabla(lista);
                JOptionPane.showMessageDialog(this, 
                    "Se encontraron " + lista.size() + " gastos para el proveedor",
                    "Búsqueda", JOptionPane.INFORMATION_MESSAGE);
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, 
                "ID Proveedor debe ser un número válido",
                "Error", JOptionPane.ERROR_MESSAGE);
        }
    } else {
        JOptionPane.showMessageDialog(this, 
            "Ingrese un concepto o un ID de proveedor para buscar",
            "Búsqueda", JOptionPane.WARNING_MESSAGE);
    }
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        try {
        Gastos g = new Gastos();
        g.setFechaGasto(txtFechaGasto.getDate());
        g.setTipoDocumento(cboTipoDoc.getSelectedItem().toString());
        g.setNumeroDocumento(txtNumDoc.getText());
        g.setConcepto(txtaConcepto.getText());
        g.setMoneda(cboMoneda.getSelectedItem().toString());
        g.setImporte(new BigDecimal(txtImporte.getText()));
        g.setIdProveedor(Integer.parseInt(txtIdProveedor.getText()));

        int r = oGastoBL.agregar(g);
        if (r > 0) {
            JOptionPane.showMessageDialog(this, "Gasto agregado correctamente ✅");
        } else {
            JOptionPane.showMessageDialog(this, "Error al agregar gasto ❌");
        }
    } catch (Exception e) {
        JOptionPane.showMessageDialog(this, "Error: " + e.getMessage());
    }
      
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void btnListarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnListarActionPerformed
            listar();
    }//GEN-LAST:event_btnListarActionPerformed

    private void btnNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoActionPerformed
        if (btnNuevo.getText().equalsIgnoreCase("Nuevo")){
            btnNuevo.setText("Cancelar");
            limpiar();
            activarbotones(true,false,false);
        }
        else {
            btnNuevo.setText("Nuevo");
            limpiar();
            activarbotones(false,true,false);
            validarCampos();
            habilitarCampos();
            txtIdProveedor.requestFocus();
        }
        
    }//GEN-LAST:event_btnNuevoActionPerformed

    private void btnActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarActionPerformed
        try {
            if (txtId.getText().isEmpty()) {
                JOptionPane.showMessageDialog(this, "Seleccione un gasto para actualizar");
                return;
            }
            Gastos g = new Gastos();
            g.setIdgasto(Integer.parseInt(txtId.getText()));
            g.setFechaGasto(txtFechaGasto.getDate());
            g.setTipoDocumento(cboTipoDoc.getSelectedItem().toString());
            g.setNumeroDocumento(txtNumDoc.getText());
            g.setConcepto(txtaConcepto.getText());
            g.setMoneda(cboMoneda.getSelectedItem().toString());
            g.setImporte(new BigDecimal(txtImporte.getText()));
            g.setIdProveedor(Integer.parseInt(txtIdProveedor.getText()));

            int r = oGastoBL.actualizar(g);
            if (r > 0) {
                JOptionPane.showMessageDialog(this, "Gasto actualizado correctamente ✅");
                listar();
                limpiar();
            } else {
                JOptionPane.showMessageDialog(this, "Error al actualizar gasto ❌");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error: " + e.getMessage());
        }
    }//GEN-LAST:event_btnActualizarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        int fila = lbListar.getSelectedRow();
    if (fila >= 0) {
        int confirm = JOptionPane.showConfirmDialog(this, "¿Está seguro de eliminar el gasto?",
                "Confirmar", JOptionPane.YES_NO_OPTION);
        if (confirm == JOptionPane.YES_OPTION) {
            int idGasto = Integer.parseInt(lbListar.getValueAt(fila, 0).toString());
            int r = oGastoBL.eliminar(idGasto);
            if (r > 0) {
                JOptionPane.showMessageDialog(this, "Gasto eliminado correctamente ✅");
                listar(); // Refrescar la tabla
            } else {
                JOptionPane.showMessageDialog(this, "Error al eliminar gasto ❌");
            }
        }
    } else {
        JOptionPane.showMessageDialog(this, "Seleccione un gasto de la tabla");
    }
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnSalirActionPerformed

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        if (txtId.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Primero seleccione un proveedor de la tabla", "Advertencia", JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        habilitarCampos();
        //modoEdicion = true;
        btnGuardar.setEnabled(false);
        btnActualizar.setEnabled(true);
        txtIdProveedor.requestFocus();
    }//GEN-LAST:event_btnEditarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmGastos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmGastos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmGastos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmGastos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmGastos().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnActualizar;
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnListar;
    private javax.swing.JButton btnNuevo;
    private javax.swing.JButton btnSalir;
    private javax.swing.JComboBox<String> cboMoneda;
    private javax.swing.JComboBox<String> cboTipoDoc;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable lbListar;
    private com.toedter.calendar.JDateChooser txtFechaGasto;
    private javax.swing.JTextField txtId;
    private javax.swing.JTextField txtIdProveedor;
    private javax.swing.JTextField txtImporte;
    private javax.swing.JTextField txtNumDoc;
    private javax.swing.JTextArea txtaConcepto;
    // End of variables declaration//GEN-END:variables
}
